0001_01_01_000000_create_users_table.php:
        Schema::create('users', function (Blueprint $table) {
            $table->increments('id');
            $table->string('username')->unique();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });

2024_12_09_063446_create_stages_table.php:
        Schema::create('stages', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name')->unique();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

2024_12_13_032051_create_grades_table.php:
        Schema::create('grades', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name')->unique();
            $table->boolean('is_active')->default(true);
            $table->integer('stage_id')->unsigned();
            $table->timestamps();
        });

2024_12_13_052023_create_subjects_table.php:
        Schema::create('subjects', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name')->unique();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

2024_12_13_234324_create_teachers_table.php:
        Schema::create('teachers', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('username')->unique();
            $table->string('password');
            $table->string('name');
            $table->string('phone')->unique();
            $table->string('email')->unique()->nullable();
            $table->integer('subject_id')->unsigned();
            $table->integer('plan_id')->unsigned()->nullable();
            $table->boolean('is_active')->default(true);
            $table->decimal('average_rating', 3, 2)->default(0.00);
            $table->decimal('balance')->default(0.00);
            $table->string('profile_pic')->nullable();
            $table->rememberToken();
            $table->softDeletes();
            $table->timestamps();
        });

2024_12_14_231154_create_teacher_grade_table.php:
        Schema::create('teacher_grade', function (Blueprint $table) {
            $table->id();
            $table->integer('teacher_id')->unsigned();
            $table->integer('grade_id')->unsigned();
        });

2024_12_17_052943_create_students_table.php:
        Schema::create('students', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('username')->unique();
            $table->string('password');
            $table->string('name');
            $table->string('phone')->unique();
            $table->string('email')->unique()->nullable();
            $table->tinyInteger('gender')->comment('1=Male, 2=Female');
            $table->date('birth_date')->nullable();
            $table->unsignedInteger('grade_id');
            $table->unsignedInteger('parent_id')->nullable();
            $table->decimal('balance')->default(0.00);
            $table->boolean('is_active')->default(true);
            $table->string('profile_pic')->nullable();
            $table->rememberToken();
            $table->softDeletes();
            $table->timestamps();
        });

2024_12_17_054131_create_student_teacher_table.php:
        Schema::create('student_teacher', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('student_id')->unsigned();
            $table->integer('teacher_id')->unsigned();
            $table->unique(['student_id', 'teacher_id']);
        });

2024_12_19_024857_create_parents_table.php:
        Schema::create('parents', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('username')->unique();
            $table->string('password');
            $table->string('name');
            $table->string('phone')->unique();
            $table->string('email')->unique()->nullable();
            $table->tinyInteger('gender')->comment('1=Male, 2=Female');
            $table->boolean('is_active')->default(true);
            $table->rememberToken();
            $table->softDeletes();
            $table->timestamps();
        });

2024_12_19_041331_create_assistants_table.php:
        Schema::create('assistants', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('username')->unique();
            $table->string('password');
            $table->string('name');
            $table->string('phone')->unique();
            $table->string('email')->unique()->nullable();
            $table->integer('teacher_id')->unsigned();
            $table->boolean('is_active')->default(true);
            $table->string('profile_pic')->nullable();
            $table->rememberToken();
            $table->softDeletes();
            $table->timestamps();
        });

2024_12_19_055215_create_plans_table.php:
        Schema::create('plans', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('name');
            $table->text('description')->nullable();
            $table->decimal('monthly_price')->default(0.00);
            $table->decimal('term_price')->default(0.00);
            $table->decimal('yearly_price')->default(0.00);
            $table->integer('max_students')->default(0)->comment('0 means unlimited');
            $table->integer('max_groups')->default(0)->comment('0 means unlimited');
            $table->integer('max_assistants')->default(0)->comment('0 means unlimited');
            $table->integer('max_quizzes_per_month')->default(0)->comment('0 means unlimited');
            $table->integer('max_assignments_per_month')->default(0)->comment('0 means unlimited');
            $table->integer('max_resources_per_month')->default(0)->comment('0 means unlimited');
            $table->boolean('can_create_zoom_meetings')->default(false);
            $table->boolean('can_create_fees')->default(false);
            $table->boolean('can_create_coupons')->default(false);
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

2024_12_23_030638_create_groups_table.php:
        Schema::create('groups', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('name');
            $table->integer('teacher_id')->unsigned();
            $table->integer('grade_id')->unsigned();
            $table->string('day_1')->nullable();
            $table->string('day_2')->nullable();
            $table->time('time');
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

2024_12_23_031529_create_student_group_table.php:
        Schema::create('student_group', function (Blueprint $table) {
            $table->increments('id');
            $table->unsignedInteger('student_id');
            $table->unsignedInteger('group_id');
        });

2025_02_23_053636_create_attendances_table.php:
        Schema::create('attendances', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('student_id')->unsigned();
            $table->integer('group_id')->unsigned();
            $table->date('date');
            $table->boolean('is_present')->default(false);
            $table->text('notes')->nullable();
            $table->timestamps();
            $table->unique(['student_id', 'group_id', 'date']);
        });

2025_03_12_060917_create_zoom_accounts_table.php:
        Schema::create('zoom_accounts', function (Blueprint $table) {
            $table->increments('id');
            $table->string('email')->unique();
            $table->string('api_key');
            $table->string('api_secret');
            $table->string('jwt_token')->nullable();
            $table->timestamp('token_expires_at')->nullable();
            $table->boolean('is_active')->default(true);
            $table->timestamps();
        });

2025_03_12_073724_create_zooms_table.php:
        Schema::create('zooms', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('meeting_id');
            $table->string('topic');
            $table->text('agenda')->nullable();
            $table->integer('teacher_id')->unsigned();
            $table->integer('group_id')->unsigned()->nullable();
            $table->integer('grade_id')->unsigned()->nullable();
            $table->string('password');
            $table->string('join_url');
            $table->string('start_url');
            $table->timestamp('start_time');
            $table->integer('duration')->comment('Duration in minutes');
            $table->tinyInteger('status')->default(1)->comment('1 => scheduled, 2 => started, 3 => ended, 4 => canceled');
            $table->timestamps();
        });

2025_03_15_084845_create_quizzes_table.php:
        Schema::create('quizzes', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('title');
            $table->text('description')->nullable();
            $table->integer('teacher_id')->unsigned();
            $table->integer('grade_id')->unsigned();
            $table->integer('duration')->comment('Duration in minutes');
            $table->timestamp('start_time');
            $table->timestamp('end_time');
            $table->boolean('is_active')->default(false);
            $table->boolean('randomize_questions')->default(false);
            $table->boolean('show_results_after_submit')->default(true);
            $table->boolean('allow_retake')->default(false);
            $table->integer('max_attempts')->default(1);
            $table->boolean('require_camera')->default(false);
            $table->boolean('require_microphone')->default(false);
            $table->boolean('prevent_tab_switch')->default(false);
            $table->timestamps();
        });

2025_03_15_084914_create_questions_table.php:
        Schema::create('questions', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('quiz_id')->unsigned();
            $table->text('question_text');
            $table->timestamps();
        });

2025_03_15_084931_create_answers_table.php:
        Schema::create('answers', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('question_id')->unsigned();
            $table->text('answer_text');
            $table->boolean('is_correct')->default(false);
            $table->decimal('score', 5, 2);
            $table->timestamps();
        });

2025_03_15_084945_create_student_answers_table.php:
        Schema::create('student_answers', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('student_id')->unsigned();
            $table->integer('quiz_id')->unsigned();
            $table->integer('question_id')->unsigned();
            $table->integer('answer_id')->unsigned()->nullable();
            $table->text('text_answer')->nullable();
            $table->decimal('score', 5, 2)->default(0.00);
            $table->timestamps();
        });

2025_03_15_085001_create_student_results_table.php:
        Schema::create('student_results', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('student_id')->unsigned();
            $table->integer('quiz_id')->unsigned();
            $table->integer('score')->default(0);
            $table->integer('total_score');
            $table->decimal('percentage', 5, 2)->default(0.00);
            $table->timestamp('started_at')->nullable();
            $table->timestamp('completed_at')->nullable();
            $table->timestamps();
        });

2025_03_15_085026_create_student_violations_table.php:
        Schema::create('student_violations', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('student_id')->unsigned();
            $table->integer('quiz_id')->unsigned();
            $table->string('violation_type');
            $table->timestamp('detected_at')->useCurrent();
            $table->timestamps();
        });

2025_03_16_065132_create_quiz_group_table.php:
        Schema::create('quiz_group', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('quiz_id')->unsigned();
            $table->integer('group_id')->unsigned();
            $table->unique(['quiz_id', 'group_id']);
        });

2025_04_04_225554_create_personal_access_tokens_table.php:
        Schema::create('personal_access_tokens', function (Blueprint $table) {
            $table->id();
            $table->morphs('tokenable');
            $table->string('name');
            $table->string('token', 64)->unique();
            $table->text('abilities')->nullable();
            $table->timestamp('last_used_at')->nullable();
            $table->timestamp('expires_at')->nullable();
            $table->timestamps();
        });

2025_04_15_032851_create_assignments_table.php:
        Schema::create('assignments', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->integer('teacher_id')->unsigned();
            $table->integer('grade_id')->unsigned();
            $table->string('title');
            $table->text('description')->nullable();
            $table->timestamp('deadline');
            $table->integer('score')->default(100);
            $table->timestamps();
        });

2025_04_15_033238_create_assignment_submissions_table.php:
        Schema::create('assignment_submissions', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('assignment_id')->unsigned();
            $table->integer('student_id')->unsigned();
            $table->timestamp('submitted_at');
            $table->integer('score');
            $table->text('feedback')->nullable();
            $table->timestamps();
        });

2025_04_15_034256_create_assignment_files_table.php:
        Schema::create('assignment_files', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('assignment_id')->unsigned();
            $table->string('file_path');
            $table->string('file_name');
            $table->integer('file_size');
            $table->timestamps();
        });

2025_04_15_034722_create_submission_files_table.php:
        Schema::create('submission_files', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('submission_id')->unsigned();
            $table->string('file_path');
            $table->string('file_name');
            $table->integer('file_size');
            $table->timestamps();
        });

2025_04_15_035712_create_assignment_group_table.php:
        Schema::create('assignment_group', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('assignment_id')->unsigned();
            $table->integer('group_id')->unsigned();
            $table->unique(['assignment_id', 'group_id']);
        });

2025_04_20_051134_create_teacher_resources_table.php:
        Schema::create('teacher_resources', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->integer('teacher_id')->unsigned();
            $table->integer('grade_id')->unsigned();
            $table->string('title');
            $table->text('description')->nullable();
            $table->string('file_path')->nullable();
            $table->string('file_name')->nullable();
            $table->integer('file_size')->default(0);
            $table->string('video_url')->nullable();
            $table->integer('views')->default(0);
            $table->integer('downloads')->default(0);
            $table->boolean('is_active')->default(false);
            $table->timestamps();
        });

2025_04_23_073754_create_teacher_subscriptions_table.php:
        Schema::create('teacher_subscriptions', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('teacher_id')->unsigned();
            $table->integer('plan_id')->unsigned();
            $table->tinyInteger('period')->default(1)->comment('1 => monthly, 2 => term, 3 => year');
            $table->date('start_date');
            $table->date('end_date');
            $table->tinyInteger('status')->default(1)->comment('1 => active, 2 => canceled, 3 => expired');
            $table->timestamps();
        });

2025_04_23_073826_create_fees_table.php:
        Schema::create('fees', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('name');
            $table->decimal('amount')->default(0.00);
            $table->integer('teacher_id')->unsigned();
            $table->integer('grade_id')->unsigned();
            $table->tinyInteger('frequency')->default(1)->comment('1 => one-time, 2 => monthly, 3 => custom');
            $table->timestamps();
        });

2025_04_23_073840_create_student_fees_table.php:
        Schema::create('student_fees', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->integer('student_id')->unsigned();
            $table->integer('fee_id')->unsigned();
            $table->decimal('discount', 5, 2)->default(0.00)->comment('Percentage discount, e.g., 10.00 for 10%');
            $table->boolean('is_exempted')->default(false);
            $table->timestamps();
        });

2025_04_23_073850_create_invoices_table.php:
        Schema::create('invoices', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->tinyInteger('type')->default(1)->comment('1 => subscription, 2 => fee');
            $table->integer('teacher_id')->unsigned()->nullable();
            $table->integer('student_id')->unsigned()->nullable();
            $table->integer('student_fee_id')->unsigned()->nullable();
            $table->integer('fee_id')->unsigned()->nullable();
            $table->integer('subscription_id')->unsigned()->nullable();
            $table->decimal('amount')->default(0.00);
            $table->date('date');
            $table->date('due_date');
            $table->tinyInteger('status')->default(1)->comment('1 => pending, 2 => paid, 3 => overdue, 4 => canceled');
            $table->timestamps();
            $table->softDeletes();
        });

2025_04_23_073900_create_transactions_table.php:
        Schema::create('transactions', function (Blueprint $table) {
            $table->increments('id');
            $table->tinyInteger('type')->default(1)->comment('1 => invoice, 2 => payment, 3 => refund, 4 => coupon');
            $table->integer('teacher_id')->unsigned()->nullable();
            $table->integer('student_id')->unsigned()->nullable();
            $table->integer('invoice_id')->unsigned()->nullable();
            $table->decimal('amount')->default(0.00);
            $table->decimal('balance_after')->comment('User balance after transaction');
            $table->text('description')->nullable();
            $table->tinyInteger('payment_method')->nullable()->comment('1 => cash, 2 => vodafone_cash, 3 => instapay, 4 => balance');
            $table->date('date');
            $table->timestamps();
        });

2025_04_23_073912_create_coupons_table.php:
        Schema::create('coupons', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('code')->unique();
            $table->decimal('amount')->default(0.00);
            $table->boolean('is_used')->default(false);
            $table->integer('teacher_id')->unsigned()->nullable();
            $table->integer('student_id')->unsigned()->nullable();
            $table->timestamps();
        });

2025_04_23_073922_create_wallets_table.php:
        Schema::create('wallets', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('user_id')->unsigned()->nullable();
            $table->integer('teacher_id')->unsigned()->nullable();
            $table->decimal('balance')->default(0.00)->comment('Earnings from fees or subscriptions');
            $table->timestamps();
        });

2025_05_05_172923_create_lessons_table.php:
        Schema::create('lessons', function (Blueprint $table) {
            $table->increments('id');
            $table->uuid('uuid')->unique();
            $table->string('title');
            $table->integer('group_id')->unsigned();
            $table->date('date');
            $table->time('time');
            $table->tinyInteger('status')->default(1)->comment('1 - Scheduled, 2 - Completed, 3 - Canceled');
            $table->timestamps();
            $table->index(['group_id', 'date']);
        });

2025_05_16_051703_create_user_devices_table.php:
        Schema::create('user_devices', function (Blueprint $table) {
            $table->increments('id');
            $table->integer('user_id')->unsigned()->nullable();
            $table->string('guard');
            $table->string('device_fingerprint');
            $table->string('user_agent')->nullable();
            $table->string('last_ip')->nullable();
            $table->timestamp('last_used_at')->nullable();
            $table->timestamps();
            $table->index(['user_id', 'guard']);
            $table->unique(['user_id', 'guard', 'device_fingerprint']);
        });

6666_66_66_666666_create_activity_log_table.php:
        Schema::connection(config('activitylog.database_connection'))->create(config('activitylog.table_name'), function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->string('log_name')->nullable();
            $table->text('description');
            $table->nullableMorphs('subject', 'subject');
            $table->nullableMorphs('causer', 'causer');
            $table->json('properties')->nullable();
            $table->timestamps();
            $table->index('log_name');
        });

Foreign keys:
    public function up(): void
    {
        # Start Platform Managment Tables
        Schema::table('grades', function (Blueprint $table) {
            $table->foreign('stage_id')->references('id')->on('stages')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        # End Platform Managment Tables

        # Start Users Management Tables
        Schema::table('teachers', function (Blueprint $table) {
            $table->foreign('subject_id')->references('id')->on('subjects')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('plan_id')->references('id')->on('plans')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('teacher_grade', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('students', function (Blueprint $table) {
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('parent_id')->references('id')->on('parents')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('student_teacher', function (Blueprint $table) {
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('assistants', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        # End Users Management Tables

        # Start Tools Tables
        Schema::table('groups', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('student_group', function (Blueprint $table) {
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('group_id')->references('id')->on('groups')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('teacher_resources', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('lessons', function (Blueprint $table) {
            $table->foreign('group_id')->references('id')->on('groups')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        # End Tools Tables

        # Start Activities Tables
        Schema::table('attendances', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('group_id')->references('id')->on('groups')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('lesson_id')->references('id')->on('lessons')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('zoom_accounts', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('zooms', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('group_id')->references('id')->on('groups')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('quizzes', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('questions', function (Blueprint $table) {
            $table->foreign('quiz_id')->references('id')->on('quizzes')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('answers', function (Blueprint $table) {
            $table->foreign('question_id')->references('id')->on('questions')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('student_answers', function (Blueprint $table) {
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('quiz_id')->references('id')->on('quizzes')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('question_id')->references('id')->on('questions')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('answer_id')->references('id')->on('answers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('student_results', function (Blueprint $table) {
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('quiz_id')->references('id')->on('quizzes')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('student_violations', function (Blueprint $table) {
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('quiz_id')->references('id')->on('quizzes')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('quiz_group', function (Blueprint $table) {
            $table->foreign('quiz_id')->references('id')->on('quizzes')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('group_id')->references('id')->on('groups')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('assignments', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('assignment_submissions', function (Blueprint $table) {
            $table->foreign('assignment_id')->references('id')->on('assignments')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('assignment_files', function (Blueprint $table) {
            $table->foreign('assignment_id')->references('id')->on('assignments')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('submission_files', function (Blueprint $table) {
            $table->foreign('submission_id')->references('id')->on('assignment_submissions')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('assignment_group', function (Blueprint $table) {
            $table->foreign('assignment_id')->references('id')->on('assignments')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('group_id')->references('id')->on('groups')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        # End Activities Tables

        # Start Finance Tables
        Schema::table('teacher_subscriptions', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('plan_id')->references('id')->on('plans')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('fees', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('grade_id')->references('id')->on('grades')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('student_fees', function (Blueprint $table) {
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('fee_id')->references('id')->on('fees')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('invoices', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('student_fee_id')->references('id')->on('student_fees')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('fee_id')->references('id')->on('fees')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('subscription_id')->references('id')->on('teacher_subscriptions')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('transactions', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('invoice_id')->references('id')->on('invoices')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('coupons', function (Blueprint $table) {
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('student_id')->references('id')->on('students')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        Schema::table('wallets', function (Blueprint $table) {
            $table->foreign('user_id')->references('id')->on('users')
                ->onDelete('cascade')
                ->onUpdate('cascade');
            $table->foreign('teacher_id')->references('id')->on('teachers')
                ->onDelete('cascade')
                ->onUpdate('cascade');
        });
        # End Finance Tables
    }
